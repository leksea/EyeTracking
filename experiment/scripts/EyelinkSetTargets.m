function EyelinkSetTargets(scr)
% set target locations and adjust screen size for planar

    % screen resolution (native for planar)
    
    screenResStr = [ '0,0,' num2str(scr.with_pix) ',' num2str(scr.height_pix)];
    Eyelink('Command', ['screen_pixel_coords = ' screenResStr]);

    %effective screen size is reduced for native resolution on planar
    Eyelink('Command','screen_phys_coords = -229.2, 171.9, 229.2, -171.9');

    % 13 point calibration
    Eyelink('Command','calibration_type = HV13')
    
    coordXStr = {num2str(scr.xc)  num2str(scr.xc - scr.clbRadiusX) ...
        num2str(scr.xc + scr.clbRadiusX) num2str(scr.xc + scr.clbRadiusX/2) ...
        num2str(scr.xc - scr.clbRadiusX/2)};
    
    
    coordYStr = {num2str(scr.yc) num2str(scr.yc-scr.clbRadiusY) ...
        num2str(scr.yc+scr.clbRadiusY) num2str(scr.yc + scr.clbRadiusY/2) ...
        num2str(scr.yc - scr.clbRadiusY/2)};

    % determine target locations in pixels
    calibrationCoordStr = [coordXStr{1} ',' coordYStr{1} ' ' ...
        coordXStr{1} ',' coordYStr{2} ' ' ...
        coordXStr{1} ',' coordYStr{3} ' '...
        coordXStr{2} ',' coordYStr{1} ' '...
        coordXStr{3} ',' coordYStr{1} ' '...
        coordXStr{2} ',' coordYStr{2} ' '...
        coordXStr{3} ',' coordYStr{2} ' '...
        coordXStr{2} ',' coordYStr{3} ' '...
        coordXStr{3} ',' coordYStr{3} ' '...
        coordXStr{5} ',' coordYStr{5} ' '...
        coordXStr{4} ',' coordYStr{5} ' '...
        coordXStr{5} ',' coordYStr{4} ' '...
        coordXStr{4} ',' coordYStr{4}];

        
    Eyelink('Command', ['calibration_targets = ' calibrationCoordStr]);
    Eyelink('Command', ['validation_targets = ' calibrationCoordStr ' '...
        coordXStr{1} ',' coordYStr{1}]);

    if ~strcmp(scr.name,'planar') || scr.width_pix ~= 1600 || scr.height_pix ~= 1200
        warning('Current Eyelink calibration only works for planar in native resolution');
    end
